{{ include "common.storage.hostPathValidate" .Values }}
apiVersion: {{ template "common.capabilities.deployment.apiVersion" . }}
kind: Deployment
metadata:
  name: {{ template "common.names.fullname" . }}
  labels:
    app: {{ template "common.names.name" . }}
    chart: {{ template "common.names.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
  annotations:
    rollme: {{ randAlphaNum 5 | quote }}
spec:
  replicas: 1
  strategy:
    type: "Recreate"
  selector:
    matchLabels:
      app: {{ template "common.names.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      name: {{ template "common.names.fullname" . }}
      labels:
        app: {{ template "common.names.name" . }}
        release: {{ .Release.Name }}
        {{- include "common.labels.selectorLabels" . | nindent 8 }}
      annotations: {{ include "common.annotations" . | nindent 8 }}
    spec:
    {{ if .Values.appVolumeMounts.data.hostPath }}
      hostNetwork: {{ .Values.hostNetwork }}
    {{ end }}
      volumes:
        - name: data
        {{ if .Values.appVolumeMounts.data.hostPath }}
          hostPath:
            path: {{ .Values.appVolumeMounts.data.hostPath }}
            type: Directory
        - name: kasm-udev
          hostPath:
            path: /run/udev/data
        - name: kasm-input
          hostPath:
            path: /dev/input
        {{ else }}
          persistentVolumeClaim:
            claimName: {{ .Values.appVolumeMounts.data.pvc }}
        {{ end }}
        - name: certs
          secret:
            secretName: kasm-tls-secret
      initContainers:
        - name: init-certs
          image: busybox:1.28
          command: ['sh', '-c', "rm /opt/kasm/current/certs/kasm_nginx.*; ln -s /certs/tls.crt /opt/kasm/current/certs/kasm_nginx.crt; ln -s /certs/tls.key /opt/kasm/current/certs/kasm_nginx.key"]

      containers:
        - name: {{ .Chart.Name }}
          {{ include "common.containers.imageConfig" .Values.image | nindent 10 }}
          securityContext:
            allowPrivilegeEscalation: true
            privileged: true
            readOnlyRootFilesystem: false
            runAsNonRoot: false
          volumeMounts:
            - name: data
              mountPath: {{ .Values.appVolumeMounts.data.mountPath }}
            - name: certs
              mountPath: /opt/kasm/current/certs
          {{ if .Values.appVolumeMounts.data.hostPath }}
            - name: kasm-udev
              mountPath: /run/udev/data
            - name: kasm-input
              mountPath: /dev/input
          {{ end }}
          ports:
            - name: web
              containerPort: {{ .Values.web_port }}
            - name: admin
              containerPort: 3000
          env:
            - name: KASM_PORT
              value: "{{ .Values.web_port }}"
